type: PythonCodeQuestion
id: a_tale_of_two_slopes
access_rules:
    add_permissions:
        - change_answer
value: 1
timeout: 10

prompt: |
    # Introduction to the slope of a line - III
    Calculate the slopes of two different sections of a line shown below.


setup_code: |
    import numpy as np
    import matplotlib.pyplot as plt
    from matplotlib.ticker import MultipleLocator

    def process_answer(question_version, dummy_slope_left, dummy_slope_right):

        if question_version not in range(1, 6):
            return

        slopes = [0.5, -1, -4, 6, 2]
        x1s = [2, 0, 2, 1, 2]
        x2s = [4, 1, 5, 5, 4]
        x3s = [6, 5, 7, 7, 6]
        x4s = [8, 9, 8, 9, 9]

        slope = slopes[question_version-1]
        x1 = x1s[question_version-1]
        x2 = x2s[question_version-1]
        x3 = x3s[question_version-1]
        x4 = x4s[question_version-1]

        x = np.linspace(0, 10)
        y = slope*x

        fig, ax = plt.subplots()
        ax.plot(x, y)

        ax.xaxis.set_major_locator(MultipleLocator(2))
        ax.xaxis.set_minor_locator(MultipleLocator(1))
        ax.yaxis.set_major_locator(MultipleLocator(2))
        ax.yaxis.set_minor_locator(MultipleLocator(1))

        plt.grid(b=True, which='major', color='k', linestyle='-', lw=0.2)
        plt.grid(b=True, which='minor', color='k', linestyle='--', lw=0.2)

        # plotting the line
        plt.plot(x, y, color='r')

        # plotting the line parallel to x-axis
        plt.plot(np.linspace(x1, x2, 100), slope*x1**np.ones(100))
        plt.plot(np.linspace(x3, x4, 100), slope*x3*np.ones(100))
        # plotting the line parallel to y-axis
        plt.plot(x2*np.ones(100), np.linspace(slope*x1, slope*x2, 100))
        plt.plot(x4*np.ones(100), np.linspace(slope*x3, slope*x4, 100))

        # highlighting the points of intersection
        plt.scatter([x1, x2], [slope*x1, slope*x2])
        plt.scatter([x3, x4], [slope*x3, slope*x4])

        plt.xlabel('X')
        plt.ylabel('Y')
        plt.axis('equal')
        plt.title('Calculate the slopes of the two parts of the line.')
        plt.show()

names_for_user: [process_answer]
names_from_user: [question_version, slope_left, slope_right]

test_code: |
    if question_version not in range(1, 6):
        feedback.finish(0, "question_version must be from 1 to 5.")

    correct_slopes = [0.5, -1, -4, 6, 2]
    correct_slope = correct_slopes[question_version-1]

    if not isinstance(slope_left, (int, float)):
        feedback.finish(0, "Your computed slope_left is not a decimal.")
    if not isinstance(slope_right, (int, float)):
        feedback.finish(0, "Your computed slope_right is not a decimal.")

    rel_err1 = abs(correct_slope-slope_left)/abs(correct_slope)
    rel_err2 = abs(correct_slope-slope_right)/abs(correct_slope)
    if rel_err1 < 0.1 and rel_err2 < 0.1:
        feedback.finish(1, "Your computed slopes are correct. Well done!")
    else:
        feedback.finish(0, "Your computed slopes were incorrect.")


correct_code: |
    ...


initial_code: |
    question_version = 1
    # Enter your slope value here.
    slope_left = ...
    slope_right = ...

    process_answer(question_version, slope_left, slope_right)

