type: PythonCodeQuestion
id: slope_tough
access_rules:
    add_permissions:
        - change_answer
value: 1
timeout: 10

prompt: |
    # Introduction to the slope of a line - II

    Now that you are familiar with the concept of slope, let us try a tough
    one. The answer has to be correct within 0.1 of the actual answer.

setup_code: |
    import numpy as np
    import matplotlib.pyplot as plt
    from matplotlib.ticker import MultipleLocator

    def process_answer(question_version, dummy_slope):
        if question_version not in range(1, 10):
            return

        slopes = [1.72, -3.14, 0.27, -2.72,  0.67, -1.62, 5.93, 2.55, 0.23]
        intercepts = [12, -56, -90, 54, 107, 22, 0, 16, -17]
        x_lefts = [42, -15, 37, 62, -90, 7, -65, 12, -39 ]
        x_rights = [52, -5, 47, 72, -80, 17, -55, 22, -29]

        slope = slopes[question_version-1]
        intercept = intercepts[question_version-1]
        x_left = x_lefts[question_version-1]
        x_right = x_rights[question_version-1]

        x = np.linspace(x_left, x_right)
        y = slope*x + intercept

        fig, ax = plt.subplots()
        ax.plot(x, y)

        ax.xaxis.set_major_locator(MultipleLocator(1))
        ax.xaxis.set_minor_locator(MultipleLocator(0.1))
        ax.yaxis.set_major_locator(MultipleLocator(1))
        ax.yaxis.set_minor_locator(MultipleLocator(0.1))

        plt.grid(b=True, which='major', color='k', linestyle='-', lw=0.2)
        plt.grid(b=True, which='minor', color='k', linestyle='--', lw=0.1)

        # plotting the line
        plt.plot(x, y, color='r')

        plt.xlabel('X')
        plt.ylabel('Y')
        plt.axis('equal')
        plt.title('A line with slope ???')
        plt.show()

names_for_user: [process_answer]
names_from_user: [question_version, slope]

test_code: |
    if question_version not in range(1, 10):
        feedback.finish(0, "question_version must be from 1 to 9.")
    correct_slopes = [1.72, -3.14, 0.27, -2.72,  0.67, -1.62, 5.93, 2.55, 0.23]
    if not isinstance(slope, (float, int)):
        feedback.finish(0, "Your computed slope is not a decimal.")
    correct_slope = correct_slopes[question_version-1]
    rel_err = abs(correct_slope-slope)/abs(correct_slope)
    if rel_err < 0.1:
        feedback.finish(1, "Your computed slope was correct. Well done!")
    else:
        feedback.finish(0, "Your computed slope was incorrect.")


correct_code: |
    slope = correct_slopes[question_version-1]


initial_code: |
    question_version = 1
    slope = ...
    process_answer(question_version, slope)

